"use client";

import React from "react";
import ReactMarkdown from "react-markdown";
import useChat from "../../hooks/useChat";
import { Button } from "../ui/button";
import { Input } from "../ui/input";
import { Card, CardContent } from "../ui/card";
import Markdown from "react-markdown";

const testresponse = {
  "model": "codellama:7b",
  "created_at": "2025-06-11T16:08:16.992948934Z",
  "response": "Here is a sample Terraform file for the specified specifications:\n```terraform\n# Create a resource group\nresource \"azurerm_resource_group\" \"example\" {\n  name     = \"my-resource-group\"\n  location = \"eastus\"\n}\n\n# Create a virtual network\nresource \"azurerm_virtual_network\" \"example\" {\n  name                = \"my-vnet\"\n  address_space       = [\"10.0.0.0/16\"]\n  resource_group_name = azurerm_resource_group.example.name\n}\n\n# Create a subnet\nresource \"azurerm_subnet\" \"example\" {\n  name                 = \"my-subnet\"\n  resource_group_name  = azurerm_resource_group.example.name\n  virtual_network_name = azurerm_virtual_network.example.name\n  address_prefixes     = [\"10.0.1.0/24\"]\n}\n\n# Create a public IP address\nresource \"azurerm_public_ip\" \"example\" {\n  name                    = \"my-pip\"\n  location                = azurerm_resource_group.example.location\n  resource_group_name     = azurerm_resource_group.example.name\n  allocation_method       = \"Dynamic\"\n}\n\n# Create a network interface\nresource \"azurerm_network_interface\" \"example\" {\n  name                = \"my-nic\"\n  location            = azurerm_resource_group.example.location\n  resource_group_name = azurerm_resource_group.example.name\n\n  ip_configuration {\n    name                          = \"my-ipconfig\"\n    subnet_id                     = azurerm_subnet.example.id\n    private_ip_address_allocation = \"Dynamic\"\n    public_ip_address_id          = azurerm_public_ip.example.id\n  }\n}\n\n# Create a virtual machine\nresource \"azurerm_virtual_machine\" \"example\" {\n  name                = \"my-vm\"\n  location            = azurerm_resource_group.example.location\n  resource_group_name = azurerm_resource_group.example.name\n\n  network_interface_ids = [azurerm_network_interface.example.id]\n\n  # Specify the OS image and other details for the virtual machine\n}\n```\nThis Terraform file creates a resource group, a virtual network, a subnet, a public IP address, and a network interface. It also creates a virtual machine with the specified network interface. The `azurerm_virtual_machine` resource block specifies the OS image and other details for the virtual machine.\n\nNote that this is just an example file, and you will need to modify it to fit your specific needs. You may also want to add additional resources such as a storage account or a load balancer depending on your requirements.",
  "done": true,
  "done_reason": "stop",
  "context": [
      518,
      25580,
      29962,
      3532,
      14816,
      29903,
      29958,
      5299,
      829,
      14816,
      29903,
      6778,
      13,
      13,
      5706,
      263,
      15087,
      689,
      934,
      363,
      263,
      22419,
      411,
      445,
      2702,
      800,
      426,
      1678,
      525,
      7491,
      2396,
      525,
      21956,
      15590,
      322,
      8210,
      6993,
      24833,
      29889,
      742,
      1678,
      525,
      7320,
      2396,
      525,
      13228,
      2043,
      293,
      583,
      742,
      1678,
      525,
      4468,
      2396,
      525,
      1988,
      29940,
      29929,
      29900,
      29929,
      29900,
      29900,
      29896,
      29918,
      29900,
      29906,
      29918,
      29906,
      29900,
      29906,
      29941,
      29918,
      29950,
      5690,
      6344,
      29918,
      9496,
      1199,
      29918,
      29943,
      1177,
      1964,
      16675,
      29912,
      1678,
      525,
      7491,
      2396,
      525,
      1123,
      1493,
      322,
      6623,
      6993,
      15366,
      25704,
      29889,
      742,
      1678,
      525,
      7320,
      2396,
      525,
      13228,
      2043,
      293,
      583,
      742,
      1678,
      525,
      4468,
      2396,
      525,
      1988,
      29940,
      29929,
      29900,
      29929,
      29900,
      29900,
      29896,
      29918,
      29900,
      29906,
      29918,
      29906,
      29900,
      29906,
      29941,
      29918,
      29950,
      5690,
      6344,
      29918,
      9496,
      1199,
      29918,
      29943,
      1177,
      1964,
      16675,
      29912,
      1678,
      525,
      7491,
      2396,
      525,
      29923,
      1983,
      545,
      19001,
      752,
      13036,
      411,
      7841,
      15332,
      15366,
      29889,
      742,
      1678,
      525,
      7320,
      2396,
      525,
      13228,
      2043,
      293,
      583,
      742,
      1678,
      525,
      4468,
      2396,
      525,
      1988,
      29940,
      29929,
      29900,
      29929,
      29900,
      29900,
      29896,
      29918,
      29900,
      29906,
      29918,
      29906,
      29900,
      29906,
      29941,
      29918,
      29950,
      5690,
      6344,
      29918,
      9496,
      1199,
      29918,
      29943,
      1177,
      1964,
      16675,
      29912,
      1678,
      525,
      7491,
      2396,
      525,
      8566,
      4641,
      599,
      20502,
      848,
      472,
      1791,
      322,
      297,
      1301,
      277,
      29889,
      742,
      1678,
      525,
      7320,
      2396,
      525,
      1469,
      14223,
      742,
      1678,
      525,
      4468,
      2396,
      525,
      1988,
      29940,
      29929,
      29900,
      29929,
      29900,
      29900,
      29896,
      29918,
      29900,
      29906,
      29918,
      29906,
      29900,
      29906,
      29941,
      29918,
      29950,
      5690,
      6344,
      29918,
      9496,
      1199,
      29918,
      29943,
      1177,
      1964,
      16675,
      29912,
      1678,
      525,
      7491,
      2396,
      525,
      1888,
      2037,
      6297,
      29899,
      6707,
      11239,
      304,
      9250,
      2130,
      304,
      16500,
      6475,
      29889,
      742,
      1678,
      525,
      7320,
      2396,
      525,
      1469,
      14223,
      742,
      1678,
      525,
      4468,
      2396,
      525,
      1988,
      29940,
      29929,
      29900,
      29929,
      29900,
      29900,
      29896,
      29918,
      29900,
      29906,
      29918,
      29906,
      29900,
      29906,
      29941,
      29918,
      29950,
      5690,
      6344,
      29918,
      9496,
      1199,
      29918,
      29943,
      1177,
      1964,
      16675,
      29912,
      1678,
      525,
      7491,
      2396,
      525,
      3664,
      1598,
      22069,
      1048,
      1009,
      5999,
      4135,
      10462,
      322,
      920,
      366,
      671,
      1009,
      2472,
      29889,
      742,
      1678,
      525,
      7320,
      2396,
      525,
      6843,
      13036,
      830,
      1548,
      1860,
      742,
      1678,
      525,
      4468,
      2396,
      525,
      1988,
      29940,
      29929,
      29900,
      29929,
      29900,
      29900,
      29896,
      29918,
      29900,
      29906,
      29918,
      29906,
      29900,
      29906,
      29941,
      29918,
      29950,
      5690,
      6344,
      29918,
      9496,
      1199,
      29918,
      29943,
      1177,
      1964,
      16675,
      518,
      29914,
      25580,
      29962,
      13,
      10605,
      338,
      263,
      4559,
      20839,
      689,
      934,
      363,
      278,
      6790,
      2702,
      800,
      29901,
      13,
      28956,
      27331,
      689,
      13,
      29937,
      6204,
      263,
      6503,
      2318,
      13,
      10314,
      376,
      834,
      332,
      837,
      29918,
      10314,
      29918,
      2972,
      29908,
      376,
      4773,
      29908,
      426,
      13,
      29871,
      1024,
      268,
      353,
      376,
      1357,
      29899,
      10314,
      29899,
      2972,
      29908,
      13,
      29871,
      4423,
      353,
      376,
      23027,
      375,
      29908,
      13,
      29913,
      13,
      13,
      29937,
      6204,
      263,
      6901,
      3564,
      13,
      10314,
      376,
      834,
      332,
      837,
      29918,
      18714,
      29918,
      11618,
      29908,
      376,
      4773,
      29908,
      426,
      13,
      29871,
      1024,
      18884,
      353,
      376,
      1357,
      29899,
      29894,
      1212,
      29908,
      13,
      29871,
      3211,
      29918,
      3493,
      539,
      353,
      6796,
      29896,
      29900,
      29889,
      29900,
      29889,
      29900,
      29889,
      29900,
      29914,
      29896,
      29953,
      3108,
      13,
      29871,
      6503,
      29918,
      2972,
      29918,
      978,
      353,
      2698,
      332,
      837,
      29918,
      10314,
      29918,
      2972,
      29889,
      4773,
      29889,
      978,
      13,
      29913,
      13,
      13,
      29937,
      6204,
      263,
      1014,
      1212,
      13,
      10314,
      376,
      834,
      332,
      837,
      29918,
      1491,
      1212,
      29908,
      376,
      4773,
      29908,
      426,
      13,
      29871,
      1024,
      462,
      353,
      376,
      1357,
      29899,
      1491,
      1212,
      29908,
      13,
      29871,
      6503,
      29918,
      2972,
      29918,
      978,
      29871,
      353,
      2698,
      332,
      837,
      29918,
      10314,
      29918,
      2972,
      29889,
      4773,
      29889,
      978,
      13,
      29871,
      6901,
      29918,
      11618,
      29918,
      978,
      353,
      2698,
      332,
      837,
      29918,
      18714,
      29918,
      11618,
      29889,
      4773,
      29889,
      978,
      13,
      29871,
      3211,
      29918,
      13506,
      267,
      268,
      353,
      6796,
      29896,
      29900,
      29889,
      29900,
      29889,
      29896,
      29889,
      29900,
      29914,
      29906,
      29946,
      3108,
      13,
      29913,
      13,
      13,
      29937,
      6204,
      263,
      970,
      5641,
      3211,
      13,
      10314,
      376,
      834,
      332,
      837,
      29918,
      3597,
      29918,
      666,
      29908,
      376,
      4773,
      29908,
      426,
      13,
      29871,
      1024,
      462,
      1678,
      353,
      376,
      1357,
      29899,
      13096,
      29908,
      13,
      29871,
      4423,
      18884,
      353,
      2698,
      332,
      837,
      29918,
      10314,
      29918,
      2972,
      29889,
      4773,
      29889,
      5479,
      13,
      29871,
      6503,
      29918,
      2972,
      29918,
      978,
      268,
      353,
      2698,
      332,
      837,
      29918,
      10314,
      29918,
      2972,
      29889,
      4773,
      29889,
      978,
      13,
      29871,
      24082,
      29918,
      5696,
      539,
      353,
      376,
      24001,
      29908,
      13,
      29913,
      13,
      13,
      29937,
      6204,
      263,
      3564,
      5067,
      13,
      10314,
      376,
      834,
      332,
      837,
      29918,
      11618,
      29918,
      13248,
      29908,
      376,
      4773,
      29908,
      426,
      13,
      29871,
      1024,
      18884,
      353,
      376,
      1357,
      29899,
      7823,
      29908,
      13,
      29871,
      4423,
      9651,
      353,
      2698,
      332,
      837,
      29918,
      10314,
      29918,
      2972,
      29889,
      4773,
      29889,
      5479,
      13,
      29871,
      6503,
      29918,
      2972,
      29918,
      978,
      353,
      2698,
      332,
      837,
      29918,
      10314,
      29918,
      2972,
      29889,
      4773,
      29889,
      978,
      13,
      13,
      29871,
      10377,
      29918,
      13305,
      426,
      13,
      1678,
      1024,
      462,
      3986,
      353,
      376,
      1357,
      29899,
      666,
      2917,
      29908,
      13,
      1678,
      1014,
      1212,
      29918,
      333,
      462,
      268,
      353,
      2698,
      332,
      837,
      29918,
      1491,
      1212,
      29889,
      4773,
      29889,
      333,
      13,
      1678,
      2024,
      29918,
      666,
      29918,
      7328,
      29918,
      284,
      5479,
      353,
      376,
      24001,
      29908,
      13,
      1678,
      970,
      29918,
      666,
      29918,
      7328,
      29918,
      333,
      3986,
      353,
      2698,
      332,
      837,
      29918,
      3597,
      29918,
      666,
      29889,
      4773,
      29889,
      333,
      13,
      29871,
      500,
      13,
      29913,
      13,
      13,
      29937,
      6204,
      263,
      6901,
      4933,
      13,
      10314,
      376,
      834,
      332,
      837,
      29918,
      18714,
      29918,
      23523,
      29908,
      376,
      4773,
      29908,
      426,
      13,
      29871,
      1024,
      18884,
      353,
      376,
      1357,
      29899,
      6925,
      29908,
      13,
      29871,
      4423,
      9651,
      353,
      2698,
      332,
      837,
      29918,
      10314,
      29918,
      2972,
      29889,
      4773,
      29889,
      5479,
      13,
      29871,
      6503,
      29918,
      2972,
      29918,
      978,
      353,
      2698,
      332,
      837,
      29918,
      10314,
      29918,
      2972,
      29889,
      4773,
      29889,
      978,
      13,
      13,
      29871,
      3564,
      29918,
      13248,
      29918,
      4841,
      353,
      518,
      834,
      332,
      837,
      29918,
      11618,
      29918,
      13248,
      29889,
      4773,
      29889,
      333,
      29962,
      13,
      13,
      29871,
      396,
      12048,
      1598,
      278,
      6570,
      1967,
      322,
      916,
      4902,
      363,
      278,
      6901,
      4933,
      13,
      29913,
      13,
      28956,
      13,
      4013,
      20839,
      689,
      934,
      10017,
      263,
      6503,
      2318,
      29892,
      263,
      6901,
      3564,
      29892,
      263,
      1014,
      1212,
      29892,
      263,
      970,
      5641,
      3211,
      29892,
      322,
      263,
      3564,
      5067,
      29889,
      739,
      884,
      10017,
      263,
      6901,
      4933,
      411,
      278,
      6790,
      3564,
      5067,
      29889,
      450,
      421,
      834,
      332,
      837,
      29918,
      18714,
      29918,
      23523,
      29952,
      6503,
      2908,
      1580,
      11057,
      278,
      6570,
      1967,
      322,
      916,
      4902,
      363,
      278,
      6901,
      4933,
      29889,
      13,
      13,
      9842,
      393,
      445,
      338,
      925,
      385,
      1342,
      934,
      29892,
      322,
      366,
      674,
      817,
      304,
      6623,
      372,
      304,
      6216,
      596,
      2702,
      4225,
      29889,
      887,
      1122,
      884,
      864,
      304,
      788,
      5684,
      7788,
      1316,
      408,
      263,
      8635,
      3633,
      470,
      263,
      2254,
      6411,
      25856,
      8679,
      373,
      596,
      11780,
      29889
  ],
  "total_duration": 178471338367,
  "load_duration": 4634612193,
  "prompt_eval_count": 395,
  "prompt_eval_duration": 9079846270,
  "eval_count": 678,
  "eval_duration": 164756092319
}

export default function ChatWindow() {
  const { messages, input, setInput, handleSend, loading } = useChat();

  return (
    <Card className="w-full h-full flex flex-col">
      <CardContent>

        <div
          style={{
            flex: 1,
            display: "flex",
            flexDirection: "column",
            padding: "1rem",
            borderLeft: "1px solid #ccc",
            backgroundColor: "#f9fafb",
          }}
        >
          <h2 style={{ fontSize: "1.25rem", marginBottom: "1rem", fontWeight: "bold" }}>
            💬 Chat with Compliance Agent
          </h2>

          <div
            style={{
              flex: 1,
              overflowY: "auto",
              marginBottom: "1rem",
              paddingRight: "0.5rem",
              display: "flex",
              flexDirection: "column",
              gap: "0.5rem",
              border: "1px solid #ddd",
              borderRadius: "8px",
              backgroundColor: "white",
              padding: "1rem",
            }}
          >
            {messages.map((msg, idx) => (
              <div
                key={idx}
                style={{
                  alignSelf: msg.role === "user" ? "flex-end" : "flex-start",
                  backgroundColor: msg.role === "user" ? "#e0f2fe" : "#f3f4f6",
                  padding: "0.75rem",
                  borderRadius: "0.5rem",
                  maxWidth: "80%",
                  whiteSpace: "pre-wrap",
                  fontSize: "0.95rem",
                }}
              >
                <ReactMarkdown>{msg.content}</ReactMarkdown>
              </div>
            ))}

            {loading && (
              <div className="p-3 rounded mb-2 max-w-[80%] bg-gray-100 text-sm text-gray-500">
                🤖 Compliance Agent is thinking...
              </div>
            )}

          </div>

          <div style={{ display: "flex", gap: "0.5rem" }}>
            <Input
              type="text"
              value={input}
              onChange={(e) => setInput(e.target.value)}
              placeholder="Ask about HIPAA, PCI, NIST..."
              onKeyDown={(e) => e.key === "Enter" && handleSend()}
              disabled={loading}
            />
            <Button
              onClick={handleSend}
              disabled={loading}
            >
              {loading ? "..." : "Send"}
            </Button>
          </div>
        </div>
        
        <code>
        </code>
        <Markdown>
          
        { testresponse.response && testresponse.response}


        </Markdown>

      </CardContent>
    </Card>
  );
}
